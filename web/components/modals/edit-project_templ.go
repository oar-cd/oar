// Code generated by templ - DO NOT EDIT.

// templ: version: v0.3.943
package modals

//lint:file-ignore SA4006 This context is only used if a nested component is present.

import "github.com/a-h/templ"
import templruntime "github.com/a-h/templ/runtime"

import "github.com/oar-cd/oar/web/components/forms"
import "github.com/oar-cd/oar/web/components/project"

// EditProjectModal renders the edit project modal
func EditProjectModal(proj project.ProjectView) templ.Component {
	return templruntime.GeneratedTemplate(func(templ_7745c5c3_Input templruntime.GeneratedComponentInput) (templ_7745c5c3_Err error) {
		templ_7745c5c3_W, ctx := templ_7745c5c3_Input.Writer, templ_7745c5c3_Input.Context
		if templ_7745c5c3_CtxErr := ctx.Err(); templ_7745c5c3_CtxErr != nil {
			return templ_7745c5c3_CtxErr
		}
		templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templruntime.GetBuffer(templ_7745c5c3_W)
		if !templ_7745c5c3_IsBuffer {
			defer func() {
				templ_7745c5c3_BufErr := templruntime.ReleaseBuffer(templ_7745c5c3_Buffer)
				if templ_7745c5c3_Err == nil {
					templ_7745c5c3_Err = templ_7745c5c3_BufErr
				}
			}()
		}
		ctx = templ.InitializeContext(ctx)
		templ_7745c5c3_Var1 := templ.GetChildren(ctx)
		if templ_7745c5c3_Var1 == nil {
			templ_7745c5c3_Var1 = templ.NopComponent
		}
		ctx = templ.ClearChildren(ctx)
		templ_7745c5c3_Err = BaseModal("Edit Project", editProjectBody(proj), editProjectFooter(proj)).Render(ctx, templ_7745c5c3_Buffer)
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		return nil
	})
}

// editProjectBody renders the modal body content
func editProjectBody(proj project.ProjectView) templ.Component {
	return templruntime.GeneratedTemplate(func(templ_7745c5c3_Input templruntime.GeneratedComponentInput) (templ_7745c5c3_Err error) {
		templ_7745c5c3_W, ctx := templ_7745c5c3_Input.Writer, templ_7745c5c3_Input.Context
		if templ_7745c5c3_CtxErr := ctx.Err(); templ_7745c5c3_CtxErr != nil {
			return templ_7745c5c3_CtxErr
		}
		templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templruntime.GetBuffer(templ_7745c5c3_W)
		if !templ_7745c5c3_IsBuffer {
			defer func() {
				templ_7745c5c3_BufErr := templruntime.ReleaseBuffer(templ_7745c5c3_Buffer)
				if templ_7745c5c3_Err == nil {
					templ_7745c5c3_Err = templ_7745c5c3_BufErr
				}
			}()
		}
		ctx = templ.InitializeContext(ctx)
		templ_7745c5c3_Var2 := templ.GetChildren(ctx)
		if templ_7745c5c3_Var2 == nil {
			templ_7745c5c3_Var2 = templ.NopComponent
		}
		ctx = templ.ClearChildren(ctx)
		templ_7745c5c3_Err = forms.ProjectForm(forms.ProjectFormData{
			IsEdit:          true,
			ProjectID:       proj.ID.String(),
			Name:            proj.Name,
			GitURL:          proj.GitURL,
			GitBranch:       proj.GitBranch,
			AuthMethod:      getAuthMethodFromProject(proj),
			Username:        getUsernameFromProject(proj),
			Password:        getPasswordFromProject(proj),
			PrivateKey:      getPrivateKeyFromProject(proj),
			ComposeFiles:    joinStringSlice(proj.ComposeFiles, "\n"),
			ComposeOverride: getComposeOverrideFromProject(proj),
			Variables:       joinStringSlice(proj.Variables, "\n"),
			WatcherEnabled:  proj.WatcherEnabled,
		}).Render(ctx, templ_7745c5c3_Buffer)
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		return nil
	})
}

// editProjectFooter renders the modal footer with action buttons
func editProjectFooter(proj project.ProjectView) templ.Component {
	return templruntime.GeneratedTemplate(func(templ_7745c5c3_Input templruntime.GeneratedComponentInput) (templ_7745c5c3_Err error) {
		templ_7745c5c3_W, ctx := templ_7745c5c3_Input.Writer, templ_7745c5c3_Input.Context
		if templ_7745c5c3_CtxErr := ctx.Err(); templ_7745c5c3_CtxErr != nil {
			return templ_7745c5c3_CtxErr
		}
		templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templruntime.GetBuffer(templ_7745c5c3_W)
		if !templ_7745c5c3_IsBuffer {
			defer func() {
				templ_7745c5c3_BufErr := templruntime.ReleaseBuffer(templ_7745c5c3_Buffer)
				if templ_7745c5c3_Err == nil {
					templ_7745c5c3_Err = templ_7745c5c3_BufErr
				}
			}()
		}
		ctx = templ.InitializeContext(ctx)
		templ_7745c5c3_Var3 := templ.GetChildren(ctx)
		if templ_7745c5c3_Var3 == nil {
			templ_7745c5c3_Var3 = templ.NopComponent
		}
		ctx = templ.ClearChildren(ctx)
		templ_7745c5c3_Err = FormFooter("Update Project").Render(ctx, templ_7745c5c3_Buffer)
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		return nil
	})
}

// Helper functions to extract auth data from project
func getAuthMethodFromProject(proj project.ProjectView) string {
	if proj.GitAuth == nil {
		return "none"
	}
	if proj.GitAuth.HTTPAuth != nil {
		return "http"
	}
	if proj.GitAuth.SSHAuth != nil {
		return "ssh"
	}
	return "none"
}

func getUsernameFromProject(proj project.ProjectView) string {
	if proj.GitAuth == nil {
		return ""
	}
	if proj.GitAuth.HTTPAuth != nil {
		return proj.GitAuth.HTTPAuth.Username
	}
	if proj.GitAuth.SSHAuth != nil {
		return proj.GitAuth.SSHAuth.User
	}
	return ""
}

func getPasswordFromProject(proj project.ProjectView) string {
	if proj.GitAuth == nil || proj.GitAuth.HTTPAuth == nil {
		return ""
	}
	return proj.GitAuth.HTTPAuth.Password
}

func getPrivateKeyFromProject(proj project.ProjectView) string {
	if proj.GitAuth == nil || proj.GitAuth.SSHAuth == nil {
		return ""
	}
	return proj.GitAuth.SSHAuth.PrivateKey
}

func getComposeOverrideFromProject(proj project.ProjectView) string {
	if proj.ComposeOverride == nil {
		return ""
	}
	return *proj.ComposeOverride
}

func joinStringSlice(slice []string, separator string) string {
	if len(slice) == 0 {
		return ""
	}
	result := ""
	for i, item := range slice {
		if i > 0 {
			result += separator
		}
		result += item
	}
	return result
}

var _ = templruntime.GeneratedTemplate
